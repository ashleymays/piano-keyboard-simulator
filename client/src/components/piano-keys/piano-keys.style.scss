@use '~/styles/_variables.scss';

$total-key-count: 36;

$base-key-width: calc(100% / $total-key-count);
$white-key-width: calc($base-key-width * 1.6469);
$black-key-width: calc($white-key-width * 0.4);

// shifts black keys so that they lay in between their two adjacent white keys
$black-key-margin: calc($black-key-width / -2);

.piano-keys {
  width: 100%;
  position: relative;
  padding: variables.$btn-spacing--parent;
  border-radius: variables.$border-radius--parent;
  background: variables.$c-bg-keys;
  touch-action: none;
}

.piano-key {
  display: block;
  position: relative;
  float: left;
  border-radius: 0 0 variables.$border-radius--child variables.$border-radius--child;

  &:first-child {
    border-top-left-radius: variables.$border-radius--child;
  }

  &:last-child {
    border-top-right-radius: variables.$border-radius--child;
  }
}

.white-key {
  color: rgba(variables.$dark-blue, variables.$op-medium);
  background: linear-gradient(#DCDCDC, #F7F7F7);
  width: $white-key-width;
  height: 100%;
  margin: 0 calc(variables.$btn-spacing--child * 2);

  &:first-child {
    margin-left: 0;
  }

  &:last-child {
    margin-right: 0;
  }

  & + .white-key {
    margin-left: 0;
  }
}

.black-key {
  width: $black-key-width;
  background: #171717;
  height: 60%;
  position: relative;
  z-index: 10;
  border-bottom: 0.3em solid #3B3B3B;
  box-shadow: 0 0.7em 0.7em rgba(0, 0, 0, variables.$op-high);
}

.black-key,
.black-key + .white-key {
  margin-left: $black-key-margin;
}
